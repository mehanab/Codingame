<?php
/**
 * Auto-generated code below aims at helping you parse
 * the standard input according to the problem statement.
 **/

$magicPhrase = stream_get_line(STDIN, 500 + 1, "\n");

$alph = "ABCDEFGHIJKLMNOPQRSTUVWXYZ ";
$arr_alph = str_split($alph);
$arr_magic = str_split($magicPhrase);
$result ="";
$last = -2;
$steps = [];
$current_pos = 0;

function smallest($last, $find)
{
    $chr = "";
    $index = 0;
    if($find > $last)
    {
        if($find - $last <= $last + (26-$find))
        { 
            $chr ="+";
            $index = abs($find-$last)-1;
        }
        else
        {
            $chr ="-";
            $index = ($last + (26-$find));
        }
        
        
    }
    else if($last == $find)
    {
        $chr ="";
        $index = 1;
    }
    else
    {
        if($last - $find <= (26-$last) + $find)
        { 
            $chr ="-";
            $index = abs($last-$find)-1;
        }
        else
        {
            $chr ="+";
            $index = ((26-$last) + $find);
        }

    }
    return ["chr"=> $chr, "index"=> $index];
};

for($k = 0; $k <= 29; $k++)
{
    $steps[]= 26;
}

foreach($arr_magic as $k => $magic_lettre)
{
    $find = array_search($magic_lettre, $arr_alph, true);

    if($find !== false)
    {   
        if($find != $last)
        {
            if ($last == -2)
            {
                if($find > 0)
                {
                    if($find < 26-$find)
                    {
                        $index = $find;
                        $chr = "+";
                    }
                    else
                    {
                        $index = (26-$find) -1;
                        $chr = "-";
                    }
                    
                    for($n = 0; $n <= $index; $n++)
                    {
                        $result .=$chr;
                    }
                    $result .=".";
                }
                else
                {
                    $result .="+.";
                }

                $last = $find;
                $steps[$current_pos]= $last;
            }
            else 
            {
                $tab_data = smallest($last, $find);
                $chr = $tab_data["chr"];
                $index = $tab_data["index"];
                $distance = 0;
                $minus = false;

                // Loop
                $cur_minus = $current_pos;
                for($i=1; $i <=4; $i++)
                {
                    $cur_minus--;
                    if($cur_minus < 0)
                        $cur_minus = 29;

                    $step_i = smallest($steps[$cur_minus], $find);
                    if($step_i["index"]+$i <= $index)
                    {
                        $index = $step_i["index"];
                        $chr = $step_i["chr"];
                        $distance = $i;
                        $minus = true;
                    }       
                }

                $cur_plus = $current_pos; 
                for($p =1; $p <=4; $p++)
                {
                    $cur_plus++;
                    if($cur_plus > 29)
                        $cur_plus = 0;

                    $step_i = smallest($steps[$cur_plus], $find);
                    if($step_i["index"]+$p <= $index)
                    {
                        $index = $step_i["index"];
                        $chr = $step_i["chr"];
                        $distance = $p;
                        $minus = false;
                    }                 
                }  
                
                if($distance >= 0)
                {
                    for($s = 0; $s < $distance; $s++)
                    {
                        $result .= $minus == true ? "<": ">";

                        if($minus)
                        {
                            $current_pos--;
                            if($current_pos < 0)
                                $current_pos = 29;
                        }
                        else
                        {
                            $current_pos++;
                            if($current_pos > 29)
                                $current_pos = 0;
                        }   
                    }
                }

                for($n = 0; $n <= $index; $n++)
                {
                    $result .= $chr;
                }

                $result .=".";
                $last = $find;  
                $steps[$current_pos]= $last;
               
            }
        }
        else
        {
            $result .= ".";
        }

    }
}
// Write an action using echo(). DON'T FORGET THE TRAILING \n
// To debug: error_log(var_export($var, true)); (equivalent to var_dump)
echo("$result\n");

?>
